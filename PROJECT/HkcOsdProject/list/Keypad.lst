C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\obj\Keypad.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\..\UI\HkcOsd\Keypad.c OPTIMIZE(SIZE) BROWSE INCDIR(..\..\DRIVER\INC;..\
                    -..\KERNEL\SCALER\INC;..\..\KERNEL\SYSTEM\INC;..\..\LIB\INC;..\..\PANEL\INC;..\..\BOARD;..\..\DRIVER\INC;..\..\KERNEL\SYS
                    -TEM\INC\AOC2011;..\..\DRIVER\extDEVICE\INC;..\..\MODEL;..\..\CONFIG;..\..\PANEL;..\..\UI\F_LOGO\INC;..\..\UI\HkcOsd\INC)
                    - DEFINE(ModelName=JRY_TESTBOARD_C_BOARD) DEBUG OBJECTEXTEND PRINT(.\list\Keypad.lst) OBJECT(.\obj\Keypad.obj)

line level    source

   1          #include "types.h"
   2          #include "board.h"
   3          #include "keypaddef.h"
   4          #include "ms_reg.h"
   5          #include "global.h"
   6          #include "debug.h"
   7          #include "misc.h"
   8          #include "ms_rwreg.h"
   9          #include "mcu.h"
  10          #include "debug.h"
  11          #include <math.h>    //MST_MCU
  12          #include "menudef.h"
  13          #include "GPIO_DEF.h"
  14          #if USEFLASH
  15          #include "userpref.h"
  16          #endif
  17          
  18          #if ENABLE_ANDROID_IR   //131008 Modify
              #include "drv_ir.h"
              #endif
  21          
  22          #define KEYPAD_DEBUG   0                // 130506
  23          #if KEYPAD_DEBUG&&ENABLE_DEBUG
              #define KEYPAD_PrintData(str, value)    printData(str, value)
              #define KEYPAD_PrintMsg(str)            printMsg(str)
              #else
  27          #define KEYPAD_PrintData(str, value)
  28          #define KEYPAD_PrintMsg(str)
  29          #endif
  30          
  31          
  32          
  33          extern void SaveMonitorSetting(void);
  34          
  35          
  36          //================================================================
  37          xdata BYTE KeypadButton = BTN_Nothing;
  38          
  39          
  40          
  41          
  42          #if 1
  43          #ifdef ADCKEY_A0_VALUE
  44          #define SARADC_MASK             0xFF
  45          #define KEY_TOL                      8///4
  46          
  47          
  48          #ifndef GPIO_POWER_KEY
  49          #define GPIO_POWER_KEY          1
  50          #endif
  51          /******************************************************
  52          #define ADCKEY_A0_VALUE     0x00
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 2   

  53          #define ADCKEY_A1_VALUE     0x68
  54          #define ADCKEY_A2_VALUE     0xFF
  55          
  56          #define ADCKEY_B0_VALUE     0x00
  57          #define ADCKEY_B1_VALUE     0x68
  58          #define ADCKEY_B2_VALUE     0x78
  59          
  60          
  61          #define ADCKEY_A0       KEY_MENU
  62          #define ADCKEY_A1       KEY_PLUS
  63          #define ADCKEY_A2       KEY_NOTHING
  64          
  65          #define ADCKEY_B0       KEY_MINUS
  66          #define ADCKEY_B1       KEY_EXIT
  67          #define ADCKEY_B2       KEY_NOTHING
  68          *******************************************************/
  69          
  70          
  71          BYTE Key_GetKeypadStatus( void )
  72          {
  73   1          BYTE u8Keypad = 0xFF;
  74   1          BYTE u8Temp = 0;
  75   1          BYTE u8Temp1 = 0;
  76   1          BYTE retry_Key=5;
  77   1      
  78   1              u8Temp = KEYPAD_ADC_A  & SARADC_MASK; //  SAR0
  79   1              while(retry_Key&&(u8Temp<(SARADC_MASK-5)))
  80   1              {
  81   2                      u8Temp = KEYPAD_ADC_A  & SARADC_MASK; //  SAR0
  82   2                      Delay1ms(15);
  83   2                      u8Temp1 =KEYPAD_ADC_A  & SARADC_MASK;
  84   2                      if(abs(u8Temp-u8Temp1)<5)
  85   2                              break;
  86   2                      retry_Key--;
  87   2              }
  88   1         // u8Temp = KEYPAD_ADC_A  & SARADC_MASK;
  89   1      
  90   1      
  91   1          if (abs(u8Temp - ADCKEY_A0_VALUE)  <= KEY_TOL)
  92   1              u8Keypad &= ~ADCKEY_A0;
  93   1      #if (ADCKEY_A1_VALUE!=0xFF)
  94   1          if (abs(u8Temp - ADCKEY_A1_VALUE)  <= KEY_TOL)
  95   1              u8Keypad &= ~ADCKEY_A1;
  96   1      #endif
  97   1      #if (ADCKEY_A2_VALUE!=0xFF)
  98   1          if (abs(u8Temp - ADCKEY_A2_VALUE)  <= KEY_TOL)
  99   1              u8Keypad &= ~ADCKEY_A2;
 100   1      #endif
 101   1      
 102   1             retry_Key=5;
 103   1              u8Temp = KEYPAD_ADC_B  & SARADC_MASK; //  SAR0
 104   1              while(retry_Key&&(u8Temp<(SARADC_MASK-5)))
 105   1              {
 106   2                      u8Temp = KEYPAD_ADC_B  & SARADC_MASK; //  SAR1
 107   2                      Delay1ms(15);
 108   2                      u8Temp1 =KEYPAD_ADC_B  & SARADC_MASK;
 109   2                      if(abs(u8Temp-u8Temp1)<5)
 110   2                              break;
 111   2                      retry_Key--;
 112   2              }
 113   1          //u8Temp1 = KEYPAD_ADC_B  & SARADC_MASK;
 114   1      
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 3   

 115   1      
 116   1          if (abs(u8Temp - ADCKEY_B0_VALUE)  <= KEY_TOL)
 117   1              u8Keypad &= ~ADCKEY_B0;
 118   1      #if (ADCKEY_B1_VALUE!=0xFF)
 119   1          if (abs(u8Temp - ADCKEY_B1_VALUE)  <= KEY_TOL)
 120   1              u8Keypad &= ~ADCKEY_B1;
 121   1      #endif  
 122   1      #if (ADCKEY_B2_VALUE!=0xFF)
 123   1          if (abs(u8Temp - ADCKEY_B2_VALUE)  <= KEY_TOL)
 124   1              u8Keypad &= ~ADCKEY_B2;
 125   1      #endif
 126   1              
 127   1          //POWER_KEY
 128   1      #if GPIO_POWER_KEY    
 129   1          if (PowerKey == 0)
 130   1               u8Keypad &= ~KEY_POWER;
 131   1      #endif  
 132   1          return u8Keypad;
 133   1      }
 134          #elif (ModelName==HJP07BF2_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                       if (temp >= 0x6A && temp <= 0x7A)
                              keypad &= ~KEY_MENU; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_MINUS; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40&& temp <= 0x50)
                              keypad &= ~KEY_PLUS; 
                 else if (temp >= 0x63 && temp <= 0x7D)
                              keypad &= ~KEY_EXIT; 
                  if(PowerKey == 0 )
                  {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 4   

                     keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #elif (ModelName == HH_TCL_T27N1_Project)||(ModelName==HH_TCL_T27N1_F_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_MENU;
                              }
                              else if (temp >=  0x62 && temp < 0x6F )
                              {
                                      keypad &= ~KEY_EXIT;
                              }
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_POWER;
                              }
                              if(temp >=  0x25 && temp < 0x35 )
                              {
                                      keypad &= ~KEY_PLUS;
                              }
                              else if (temp >=  0x62 && temp < 0x6F )
                              {
                                      keypad &= ~KEY_MINUS;
                              }
                      
                  return keypad;
              }
              #elif (ModelName == HH_TSY_KF270F075P_F_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 3;
                  while (retry_Key)
                  {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 5   

                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_MENU;
                              }
                              else if (temp >=  0x62 && temp < 0x6F )
                              {
                                      keypad &= ~KEY_EXIT;
                              }
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_POWER;
                              }
                              if(temp >=  0x25 && temp < 0x35 )
                              {
                                      keypad &= ~KEY_PLUS;
                              }
                              else if (temp >=  0x62 && temp < 0x6F )
                              {
                                      keypad &= ~KEY_MINUS;
                              }
                      
                  return keypad;
              }
              #elif (ModelName == TOPSYNC_KF238F075P_Y)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 6   

                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              
              #elif (ModelName == MODEL_24P630F_CHD)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 7   

                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              
              #elif (ModelName == MODEL_FZ22LVD_FND)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 8   

                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              
              #elif (ModelName == X_STAR_NX2410F)
              #if                     1       //2ke hu key
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x95 && temp < 0xA5)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x95 && temp < 0xA5)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 9   

                  return keypad;
              }
              #else
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #endif
              #elif (ModelName == HH_HKC_T32M8C_C_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 10  

                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                       if (temp >= 0x6A && temp <= 0x7A)
                              keypad &= ~KEY_MENU; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_PLUS; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40&& temp <= 0x50)
                              keypad &= ~KEY_MINUS; 
                 else if (temp >= 0x63 && temp <= 0x7D)
                              keypad &= ~KEY_EXIT; 
                  if(PowerKey == 0 )
                  {
                     keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              
              #elif (ModelName == HH_BOARD_DEMO_Project)
              #if      MainBoardType ==MainBorad_JRY_L5AFHD_FV1
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_MENU;//y                 
                              }                                               
                              else if (temp >=  0x62 && temp < 0x6F )
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 11  

                              {
                                      keypad &= ~KEY_EXIT;//n
                              }
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                              if(temp >=  0x00 && temp <= 0x09 )
                              {
                                      keypad &= ~KEY_POWER;
                              }
                              if(temp >=  0x29 && temp < 0x35 )
                              {
                                      keypad &= ~KEY_PLUS;//--        
                              }
                              else if (temp >=  0x62 && temp < 0x6F )
                              {
                                      keypad &= ~KEY_MINUS;//s
                              }
                  return keypad;
              }
              #else
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_PLUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 12  

                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x60 && temp < 0x70)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #endif
              
              #elif (ModelName == HH_HKC_27P630Q_U_Project)||(ModelName == HH_HKC_XXXXX_U2_Project)||(ModelName == HH_HK
             -C_KF270F144P_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                      
                      if( temp < 0x10)
                              keypad &= ~KEY_MENU;
                  else if(temp >= 0x98 && temp < 0xAB)
                              keypad &= ~KEY_EXIT;
              
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                  if( temp < 0x10)
                              keypad &= ~KEY_POWER;
                  else if(temp >= 0x4B && temp < 0x60)
                              keypad &= ~KEY_PLUS;
                  else if(temp >= 0x98 && temp < 0xAB)
                              keypad &= ~KEY_MINUS;
              
                /*  if(PowerKey == 0 )
                  {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 13  

                      keypad &= ~KEY_MENU;
                  }
                  */
                  return keypad;
                      
              }
              #elif (ModelName == HH_HKC_XXXXX_U_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                      
                      if( temp < 0x10)
                              keypad &= ~KEY_PLUS;
              
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                  if( temp < 0x10)
                              keypad &= ~KEY_MINUS;
                  else if(temp >= 0x40 && temp < 0x4A)
                              keypad &= ~KEY_MENU;
                  else if(temp >= 0x70 && temp < 0x78)
                              keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
                      
              }
              #elif (ModelName == HH_TCL_DEMO_Project)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 14  

                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                       if (temp >= 0x6A && temp <= 0x7A)
                              keypad &= ~KEY_MENU; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_PLUS; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40&& temp <= 0x50)
                              keypad &= ~KEY_MINUS; 
                 else if (temp >= 0x63 && temp <= 0x7D)
                              keypad &= ~KEY_EXIT; 
                  if(PowerKey == 0 )
                  {
                     keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #elif (MainBoardType == MainBoard_JRY_O58FHG_CV1)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_MENU;
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 15  

              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_PLUS;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #elif (MainBoardType==MainBoard_JRY_O58FHG_BV1)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x50 && temp < 0x5F)
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x2B && temp < 0x3A)
                      keypad &= ~KEY_MINUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 16  

                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_EXIT;
                  else if(temp >= 0x50 && temp < 0x5F)
                      keypad &= ~KEY_PLUS;
              
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #elif (MainBoardType==MainBoard_JRY_W58VHN_NV1)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x12 && temp < 0x1B)
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x25 && temp < 0x2F)
                      keypad &= ~KEY_MINUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 17  

              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_PLUS;//;
                  else if(temp >= 0x26 && temp < 0x30)
                      keypad &= ~KEY_EXIT;
              
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              
              #elif (ModelName==JRY_L58VHN_GV3)
              
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_MINUS; //keypad &= ~KEY_PLUS; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_EXIT; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_MENU; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_PLUS; //KEY_MINUS
                 else if (temp >= 0x67 && temp <= 0x7A)
                              keypad &= ~KEY_POWER; 
                  //if(PowerKey == 0 )
                  //{
                  //    keypad &= ~KEY_POWER;
                  //}
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 18  

                  return keypad;
              }
              #elif (ModelName==JRY_L58CDT9_EV1)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_EXIT; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x50 && temp <= 0x5A)
                              keypad &= ~KEY_MINUS; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_POWER; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x4B && temp <= 0x58)
                              keypad &= ~KEY_MENU; 
                 else if (temp >= 0x63 && temp <= 0x7D)
                              keypad &= ~KEY_PLUS; 
                  //if(PowerKey == 0 )
                  //{
                  //    keypad &= ~KEY_POWER;
                  //}
                  return keypad;
              }
              
              #elif (ModelName==JRY_L58CDT9_GV3)
              #if (MainBoardType == MainBoard_JRY_L58CDT9_EV1)
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 19  

                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_EXIT; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x50 && temp <= 0x5A)
                              keypad &= ~KEY_MINUS; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_POWER; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x4B && temp <= 0x58)
                              keypad &= ~KEY_MENU; 
                 else if (temp >= 0x63 && temp <= 0x7D)
                              keypad &= ~KEY_PLUS; 
                  //if(PowerKey == 0 )
                  //{
                  //    keypad &= ~KEY_POWER;
                  //}
                  return keypad;
              }
              #else
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_PLUS; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_EXIT; 
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 20  

              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_MENU; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_MINUS; 
                 else if (temp >= 0x67 && temp <= 0x7A)
                              keypad &= ~KEY_POWER; 
                  //if(PowerKey == 0 )
                  //{
                  //    keypad &= ~KEY_POWER;
                  //}
                  return keypad;
              }
              #endif
              
              #elif (ModelName==JRY_L58CDT9_PV1)
              
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp;                                       // temp1, retry_Key;
                      
                      temp = KEYPAD_ADC_A&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_A&0xFF))>5)
                              {
                                Delay1ms(15);
                                   temp = KEYPAD_ADC_A&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_PLUS; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_EXIT; 
              
              
              
                    temp = KEYPAD_ADC_B&0xFF;
                      if(temp!=0xFF)
                      {
                         Delay1ms(10);
                            while (abs(temp-( temp = KEYPAD_ADC_B&0xFF))>5)
                              {
                                Delay1ms(15);
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 21  

                                   temp = KEYPAD_ADC_B&0xFF;
                              }
                      }
                      
              
                 if (temp <= 0x0A)
                           keypad &= ~KEY_MENU; //keypad &= ~KEY_MENU; 
                else if (temp >= 0x40 && temp <= 0x4F)
                              keypad &= ~KEY_MINUS; 
                 else if (temp >= 0x67 && temp <= 0x7A)
                              keypad &= ~KEY_POWER; 
                  //if(PowerKey == 0 )
                  //{
                  //    keypad &= ~KEY_POWER;
                  //}
                  return keypad;
              }
              
              
              #elif (MainBoardType == MainBoard_JRY_L58CDT9_NV1)
              #if 1
              BYTE Key_GetKeypadStatus(void)
              {
              
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                 if(temp>0x6C&&temp < 0x77) // 0x48
                      keypad &= ~KEY_MENU;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                      if(temp>=0x00&&temp < 0x10) 
                              keypad &= ~KEY_EXIT;
                      else if(temp>0x43&&temp < 0x4D) 
                              keypad &= ~KEY_MINUS;
                       else if(temp>=0x65&&temp < 0x72) 
                              keypad &= ~KEY_PLUS;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 22  

                  return keypad;
              
              }
              #endif
              #elif (MainBoardType == MainBoard_L38CDMT9_GV1)
              
              BYTE Key_GetKeypadStatus(void)
              {
              
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                 if(temp>0x6C&&temp < 0x77) // 0x48
                      keypad &= ~KEY_MENU;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
                      if(temp>=0x00&&temp < 0x10) 
                              keypad &= ~KEY_EXIT;
                      else if(temp>0x43&&temp < 0x4D) 
                              keypad &= ~KEY_PLUS;
                       else if(temp>=0x65&&temp < 0x72) 
                              keypad &= ~KEY_MINUS;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              
              }
              #elif (MainBoardType == MainBoard_W38CDMT9_PV1)
              
              BYTE Key_GetKeypadStatus(void) 
              {
              #if  0//  JRY  to  test
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 23  

                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_MENU;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_EXIT;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_PLUS;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              #else
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 24  

                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
              
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_PLUS;
                  else if(temp >= 0xE5 && temp <= 0xF0)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
                      
                      #endif
              }
              
              
              #else
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x12 && temp < 0x1B)
                      keypad &= ~KEY_MENU;
                  else if(temp >= 0x25 && temp < 0x2F)
                      keypad &= ~KEY_MINUS;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 25  

                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_PLUS;//;
                  else if(temp >= 0x26 && temp < 0x30)
                      keypad &= ~KEY_EXIT;
              
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #endif
1497          
1498          
1499          #if (FEnterFunction==FEnter_AC_MENU)
1500          void CheckFactoryKeyStatus(void)
1501          {
1502   1              BYTE keypadStatus;
1503   1              keypadStatus = (Key_GetKeypadStatus() ^ KeypadMask) &KeypadMask;
1504   1              
1505   1              if (keypadStatus == KEY_MENU)
1506   1              {
1507   2                      Set_FactoryModeFlag();
1508   2                      Set_BurninModeFlag();
1509   2                      
1510   2                   #if !USEFLASH
                              NVRam_WriteByte(nvrMonitorAddr(MonitorFlag), MonitorFlags);
                           #else
1513   2                      UserPref_EnableFlashSaveBit(bFlashSaveMonitorBit); 
1514   2                   #endif
1515   2                  Set_PowerOnFlag();
1516   2                  Set_AutoColorFlag();
1517   2              }
1518   1      }
1519          #endif
1520          
1521          
1522          
1523          #if HotInputSelect 
1524          Bool CheckSourceKeyStatus(void)
1525          { BYTE keypadStatus;
1526   1        int i;
1527   1      if(UnsupportedModeFlag)
1528   1               return FALSE;
1529   1      
1530   1        for(i=0;i<33;i++)//  for(i=0;i<50;i++)
1531   1              {
1532   2                Delay1ms(50);
1533   2                keypadStatus=(Key_GetKeypadStatus()^KeypadMask)&KeypadMask;
1534   2              
1535   2                   if (keypadStatus==KEY_EXIT)
1536   2                      {
1537   3                          SourceKeyCounter++;
1538   3                       if(SourceKeyCounter>30)//50
1539   3                           break;              
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 26  

1540   3                       else    
1541   3                          continue;
1542   3                      }
1543   2                 else
1544   2                      break;
1545   2              }
1546   1        //printData("SourceKeyCounter  %d", SourceKeyCounter);
1547   1      
1548   1       return FALSE;
1549   1      }
1550          #endif
1551          
1552          
1553          extern void Power_TurnOffLed(void);
1554          extern void Power_TurnOnGreenLed(void);
1555          extern Bool ExecuteKeyEvent(MenuItemActionType menuAction);
1556          extern void Osd_Hide(void);
1557          extern BYTE  xdata MenuPageIndex;
1558          
1559          
1560          BOOL Key_ScanKeypad(void)
1561          {
1562   1          BYTE keypadStatus=0;
1563   1      
1564   1          if (gBoolVisualKey == 0)
1565   1              {
1566   2              keypadStatus = (Key_GetKeypadStatus() ^ KeypadMask) &KeypadMask;
1567   2            #if ENABLE_ANDROID_IR
                      keypadStatus |= ( IR_GetIRKeypadStatus() ^ KeypadMask ) & KeypadMask;
                    #endif
1570   2      
1571   2              }
1572   1              
1573   1          else if (gBoolVisualKey == 1)
1574   1          {
1575   2              gBoolVisualKey = 0;
1576   2              keypadStatus = (gByteVisualKey ^ KeypadMask) &KeypadMask;
1577   2          }
1578   1         
1579   1              #if ENABLE_DEBUG
                      if(keypadStatus != 0){
                              printData("Kpd: keypadStatus = %x",keypadStatus);
              //              KEYPAD_PrintData("Kpd: keypadStatus = %d",keypadStatus);
                              KEYPAD_PrintData("Kpd: MenuPageIndex = %d",MenuPageIndex);
                      }
                      #endif
1586   1      
1587   1          
1588   1          if (keypadStatus)
1589   1          {
1590   2      
1591   2              {
1592   3                  
1593   3                      #if  (FEnterFunction==FEnter_POWER_MENU)||(FEnterFunction==FEnter_POWER_EXIT)
                               if(keypadStatus == KEY_FACTORY && !PowerOnFlag)
                              {
                                      Set_FactoryModeFlag();
                                      Set_BurninModeFlag();
                                      Set_DoBurninModeFlag();
                               #if !USEFLASH
                               NVRam_WriteByte(nvrMonitorAddr(MonitorFlag), MonitorFlags);
                               #else
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 27  

                               UserPref_EnableFlashSaveBit(bFlashSaveMonitorBit); 
                               #endif
                                      KeypadButton = BTN_Power;
                              }
                               else
                              #endif                    
1608   3                   if (keypadStatus == KEY_PLUS)
1609   3                  {
1610   4                      if (MenuPageIndex == RootMenu )         //120425 Modify
1611   4                      {
1612   5      
1613   5                                  if (KeypadButton == BTN_Plus|| KeypadButton == BTN_Repeat)
1614   5                                          KeypadButton = BTN_Repeat;
1615   5                                  else
1616   5                                      KeypadButton = BTN_Plus;
1617   5                                  Delay1ms(100);
1618   5      
1619   5                      }
1620   4                      else
1621   4                          KeypadButton = BTN_Plus;
1622   4                  }
1623   3                              
1624   3                  else if (keypadStatus == KEY_MINUS)
1625   3                  {
1626   4                      if (MenuPageIndex == RootMenu )         //120425 Modify
1627   4                      {
1628   5      
1629   5                                  if (KeypadButton == BTN_Minus || KeypadButton == BTN_Repeat)
1630   5                                          KeypadButton = BTN_Repeat;
1631   5                                  else
1632   5                                      KeypadButton = BTN_Minus;
1633   5                                  Delay1ms(100);
1634   5      
1635   5                      }
1636   4                      else
1637   4                          KeypadButton = BTN_Minus;
1638   4                  }
1639   3                  else if (keypadStatus == KEY_EXIT)
1640   3                  {
1641   4      
1642   4                  #if Enable_Exit_LongPressKeyFunction                        ////for long press key , if need ,please study 
                              if ( MenuPageIndex == RootMenu && KeypadButton == BTN_Nothing)
                           {
                                  if ( g_HoldKeypadButton == BTN_Exit&& g_HoldKeyCounter>2 )
                                  {
              
                                                g_HoldKeyCounter=0;           
                                            g_HoldKeypadButton=BTN_EndBTN;
                                              KeypadButton = BTN_ExitPressKey;                          
              
                                  }
                                  else
                                  {
                                       //printData("KeypadButton==MINUS_1=", 1);
                                              if(g_HoldKeypadButton==BTN_EndBTN)
                                              {
                                                      g_HoldKeypadButton = BTN_Exit;
                                              }
                                           KeypadButton = BTN_Nothing;  
                                  }
                             }
                              else
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 28  

                              #endif
1665   4      
1666   4                          if ((KeypadButton == BTN_Exit || KeypadButton == BTN_Repeat))
1667   4                              KeypadButton = BTN_Repeat;
1668   4                      else
1669   4                              {
1670   5                                              KeypadButton = BTN_Exit;
1671   5                              }
1672   4      
1673   4                               Delay1ms ( 5 );
1674   4                  }
1675   3                  else if (keypadStatus == KEY_MENU)
1676   3                  {
1677   4                                      {
1678   5                                              if(KeypadButton==BTN_Repeat||KeypadButton==BTN_Menu)
1679   5                                              KeypadButton=BTN_Repeat;
1680   5                                              else
1681   5                                              {
1682   6                                                      KeypadButton=BTN_Menu;
1683   6                                              }
1684   5                                      }
1685   4                               Delay1ms ( 5 );
1686   4                      }
1687   3                  else if (keypadStatus == KEY_POWER)
1688   3                  {
1689   4      
1690   4                              if (KeypadButton == BTN_Power || KeypadButton == BTN_Repeat)
1691   4                              {
1692   5                                      KeypadButton = BTN_Repeat;
1693   5                              }
1694   4                              else            
1695   4                              KeypadButton = BTN_Power;
1696   4      
1697   4                  }
1698   3                  else
1699   3                  {
1700   4                      KeypadButton = BTN_Nothing;
1701   4       
1702   4                  }
1703   3      
1704   3              }
1705   2                  
1706   2                  
1707   2          }
1708   1          else //check when key release
1709   1          {
1710   2              
1711   2              if (PowerKeyFlag)
1712   2              {
1713   3                  Set_MainOSDFlag();
1714   3                      KeypadButton = BTN_Power;
1715   3              }
1716   2              else
1717   2              {
1718   3                  Clr_DoKeyCountFlag();
1719   3                  PowerKeyCounter=0;
1720   3              }
1721   2      
1722   2      
1723   2                   #if Enable_ButtonKeyLongPressFunction//for long press key , if need ,please study 
                              if (MenuPageIndex == RootMenu)
                              {
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 29  

                                  if(g_HoldKeyCounter<5)
                                      {
                                         #if Enable_Exit_LongPressKeyFunction
                                         if(g_HoldKeypadButton == BTN_Exit)
                                              KeypadButton = BTN_Exit;
                                          else
                                           #endif                     
                                              KeypadButton = BTN_Nothing; 
                                                      
                                      }
                              }
                              else   
                              {
                                      KeypadButton=BTN_Nothing;
                              }
                              g_HoldKeyCounter=0;
                               g_HoldKeypadButton = BTN_EndBTN;
                              #else 
1744   2                              KeypadButton = BTN_Nothing;
1745   2                      #endif
1746   2      
1747   2      
1748   2         
1749   2      
1750   2              
1751   2          }
1752   1              
1753   1              //printData("Kpd_End: KeypadButton = %d",KeypadButton);
1754   1              return TRUE;  ///  //// ///
1755   1      }
1756          #endif 
1757          #if 0
              BYTE Key_GetKeypadStatus(void)  //charles
              {
                  BYTE keypad = 0xFF;
                  BYTE temp, temp1, retry_Key;
                  retry_Key = 5;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_A;
                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_A;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA // 090410
                  if(temp<60)
                  printData("ADC2=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_NOTHING;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_MENU;
              
                  retry_Key = 3;
                  while (retry_Key)
                  {
                      temp = KEYPAD_ADC_B;
C51 COMPILER V9.01   KEYPAD                                                                03/09/2023 15:39:22 PAGE 30  

                      Delay1ms(2);
                      temp1 = KEYPAD_ADC_B;
                      if (abs(temp - temp1) < 3)
                          break;
                      retry_Key--;
                  }
                  #if 0//DEBUG_PRINTDATA
                  if(temp<60)
                  printData("ADC3=%d",temp);
                  #endif
              
                  if(  temp < 0x10 )
                      keypad &= ~KEY_MINUS;
                  else if(temp >= 0x40 && temp < 0x50)
                      keypad &= ~KEY_PLUS;
                  else if(temp >= 0x68 && temp < 0x78)
                      keypad &= ~KEY_EXIT;
              
                  if(PowerKey == 0 )
                  {
                      keypad &= ~KEY_POWER;
                  }
                  return keypad;
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    681    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
