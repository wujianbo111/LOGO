C51 COMPILER V9.01   NVRAM                                                                 03/09/2023 15:39:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE NVRAM
OBJECT MODULE PLACED IN .\obj\NVRam.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\..\KERNEL\SYSTEM\NVRam.c OPTIMIZE(SIZE) BROWSE INCDIR(..\..\DRIVER\INC;
                    -..\..\KERNEL\SCALER\INC;..\..\KERNEL\SYSTEM\INC;..\..\LIB\INC;..\..\PANEL\INC;..\..\BOARD;..\..\DRIVER\INC;..\..\KERNEL\
                    -SYSTEM\INC\AOC2011;..\..\DRIVER\extDEVICE\INC;..\..\MODEL;..\..\CONFIG;..\..\PANEL;..\..\UI\F_LOGO\INC;..\..\UI\HkcOsd\I
                    -NC) DEFINE(ModelName=JRY_TESTBOARD_C_BOARD) DEBUG OBJECTEXTEND PRINT(.\list\NVRam.lst) OBJECT(.\obj\NVRam.obj)

line level    source

   1          #include "types.h"
   2          #include "i2cdef.h"
   3          #include "board.h"//Fay 2013/5/27   
   4          #include "i2c.h"//Fay 2013/5/27   
   5          #include "global.h"
   6          #include "GPIO_DEF.h"
   7          
   8          #define NVRAM_DEVICE    0xA0
   9          
  10          #if 0//( !USEFLASH)
              void NVRam_WriteByte(WORD addr, BYTE value)
              {
                  Clr_EEPROM_WP(); //wumaozhong 20050331
              #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmBurstWriteBytes(addr, &value, 1);
              #else
                  i2c_WriteTBL(NVRAM_DEVICE, addr, &value, 1);
              #endif   
                  Set_EEPROM_WP(); //wumaozhong 20050331 
              }
              
              
              void NVRam_WriteWord(WORD addr, WORD value)
              {
                  Clr_EEPROM_WP(); 
              #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmBurstWriteBytes(addr, ( BYTE* )&value, 2);
              #else
                  NVRAM_i2c_WriteTBL(NVRAM_DEVICE, addr, (BYTE*)&value, 2);
              #endif
                  Set_EEPROM_WP(); 
              }
               
              void NVRam_ReadByte(WORD addr, BYTE *value)
              {
              #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmSWBurstReadBytes(addr, value, 1);
              #else
                  NVRAM_i2c_ReadTBL(NVRAM_DEVICE, addr, value, 1);
              #endif  
              }
              void NVRam_ReadTbl(WORD addr, BYTE *buffer, BYTE count)
              {
              #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmSWBurstReadBytes(addr, buffer, count);
              #else
                  NVRAM_i2c_ReadTBL(NVRAM_DEVICE, addr, buffer, count);
              #endif    
              }
              
              #elif (VGA_Write_EEPROM||DVI_Write_EEPROM|HDMI_Write_EEPROM)
  52          
C51 COMPILER V9.01   NVRAM                                                                 03/09/2023 15:39:23 PAGE 2   

  53          void NVRam_WriteByte(WORD addr, BYTE value)
  54          {
  55   1      #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmBurstWriteBytes(addr, &value, 1);
              #else
  58   1          NVRAM_i2c_WriteTBL(NVRAM_DEVICE, addr, &value, 1);
  59   1      #endif   
  60   1      }
  61          
  62          void NVRam_ReadByte(WORD addr, BYTE *value)
  63          {
  64   1      #if (EEPROM_TYPE >= EEPROM_24C32)
                  rmSWBurstReadBytes(addr, value, 1);
              #else
  67   1          NVRAM_i2c_ReadTBL(NVRAM_DEVICE, addr, value, 1);
  68   1      #endif  
  69   1      }
  70          #ifdef UseVGACableReadWriteAllPortsEDID
              #if 0
              void WriteDevice(BYTE DeviceType,WORD Address, BYTE* buf,BYTE Length)//Write Data To Device
              {
                      EnableReadDDCType = DeviceType;//Select Current IIC Port
                      NVRAM_i2c_WriteTBL(0xA0, Address, buf, Length);//it takes about 48ms for EEPROM to write 32 Bytes.
                      EnableReadDDCType = I2C_EEPROM;//Set IIC Port To UserData EEPRom
              }
              #endif
              void ReadDevice(BYTE DeviceType,WORD Address,BYTE* buf, BYTE Length)//Read Data From Device
              {
                      EnableReadDDCType = DeviceType;//Select Current IIC Port
                      NVRAM_i2c_ReadTBL(0xA0, Address, buf, Length);//Read Data From EEProm
                      EnableReadDDCType = I2C_EEPROM;//Set IIC Port To UserData EEPRom
              }
              #endif
  86          #endif
  87          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     32    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
