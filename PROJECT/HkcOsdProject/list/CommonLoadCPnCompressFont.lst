C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             03/09/2023 15:39:00 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE COMMONLOADCPNCOMPRESSFONT
OBJECT MODULE PLACED IN .\obj\CommonLoadCPnCompressFont.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\..\UI\HkcOsd\CommonLoadCPnCompressFont.c OPTIMIZE(SIZE) BROWSE INCDIR(.
                    -.\..\DRIVER\INC;..\..\KERNEL\SCALER\INC;..\..\KERNEL\SYSTEM\INC;..\..\LIB\INC;..\..\PANEL\INC;..\..\BOARD;..\..\DRIVER\I
                    -NC;..\..\KERNEL\SYSTEM\INC\AOC2011;..\..\DRIVER\extDEVICE\INC;..\..\MODEL;..\..\CONFIG;..\..\PANEL;..\..\UI\F_LOGO\INC;.
                    -.\..\UI\HkcOsd\INC) DEFINE(ModelName=JRY_TESTBOARD_C_BOARD) DEBUG OBJECTEXTEND PRINT(.\list\CommonLoadCPnCompressFont.ls
                    -t) OBJECT(.\obj\CommonLoadCPnCompressFont.obj)

line level    source

   1          #include "global.h"
   2          #include "msosd.h"
   3          #include "drvosd.h"
   4          
   5          #include "Extlib.h"
   6          
   7          extern  xdata BYTE  OsdFontColor;
   8          
   9          #if CHIP_ID >= CHIP_TSUMV
  10          
  11          void Load256ColorPalette(BYTE u8Group, BYTE u8Addr, ColorPaletteType *colorPtr, WORD u16Num)
  12          {
  13   1      #if CHIP_ID>=CHIP_TSUM2
  14   1               WORD xdata i;
  15   1          if (u8Group==0)
  16   1              WRITE_PSRAM0_ADDR();
  17   1          else
  18   1              WRITE_PSRAM1_ADDR();
  19   1          //write R/G/B
  20   1          msWriteByte(OSD1_66, u8Addr);
  21   1          if (u8Group==0)
  22   1              WRITE_PSRAM0_COLOR();
  23   1          else
  24   1              WRITE_PSRAM1_COLOR();
  25   1              
  26   1          for (i=0;i<u16Num;i++)
  27   1          {
  28   2              msWriteByte(OSD1_66, ((colorPtr+i)->u8Blue));
  29   2              msWriteByte(OSD1_66, ((colorPtr+i)->u8Green));
  30   2              msWriteByte(OSD1_66, ((colorPtr+i)->u8Red));
  31   2          }
  32   1      
  33   1          //write colorkey
  34   1          if (u8Group==0)
  35   1              WRITE_PSRAM0_ADDR();
  36   1          else
  37   1              WRITE_PSRAM1_ADDR();
  38   1          msWriteByte(OSD1_66, u8Addr);
  39   1          if (u8Group==0)
  40   1              WRITE_PSRAM0_COLOR_KEY();
  41   1          else
  42   1              WRITE_PSRAM0_COLOR_KEY();
  43   1          while (u16Num--)
  44   1          {
  45   2              if(colorPtr->u8ColorKey)
  46   2                  msWriteByteMask(OSD1_66, BIT0,BIT0);
  47   2              else
  48   2                  msWriteByteMask(OSD1_66, 0,BIT0);
  49   2              colorPtr++;
  50   2          }
  51   1      
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             03/09/2023 15:39:00 PAGE 2   

  52   1      
  53   1      #elif CHIP_ID==CHIP_TSUMV
              
                  WORD xdata i,u16PSRAM_AddrPort;
                  BYTE u8Bank=msReadByte(OSD1_00);
                  msWriteByte(OSD1_00,0x00);//subbank 0
                  if (u8Group==0)
                      u16PSRAM_AddrPort=OSD1_76;
                  else
                      u16PSRAM_AddrPort=OSD1_86;
              //u8Addr=0;
                  //write R/G/B
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  for (i=0;i<u16Num;i++)
                  {   
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Blue));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Green));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(u16PSRAM_AddrPort+3, BIT0,BIT0);
                      else
                          msWriteByteMask(u16PSRAM_AddrPort+3, 0,BIT0);
                      colorPtr++;
                  }
                  msWriteByte(OSD1_00,u8Bank);//subbank 0
              
                  #else
                      WORD xdata i;
                      u8Group=0;
                      msWriteByte( OSD2_AC, u8Addr );
                      for (i=0; i<u16Num; i++)
                      {
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Red));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Green));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Blue));
                      }
                  #endif
  95   1      }
  96          
  97          #endif
  98          #if CHIP_ID < CHIP_TSUMV
              void Load256ColorPalette(BYTE u8Group, BYTE u8Addr, ColorPaletteType *colorPtr, WORD u16Num)
              {
              #if CHIP_ID>=CHIP_TSUM2
                       WORD xdata i;
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  //write R/G/B
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR();
                  else
                      WRITE_PSRAM1_COLOR();
                      
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             03/09/2023 15:39:00 PAGE 3   

                  for (i=0;i<u16Num;i++)
                  {
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Blue));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Green));
                      msWriteByte(OSD1_66, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  if (u8Group==0)
                      WRITE_PSRAM0_ADDR();
                  else
                      WRITE_PSRAM1_ADDR();
                  msWriteByte(OSD1_66, u8Addr);
                  if (u8Group==0)
                      WRITE_PSRAM0_COLOR_KEY();
                  else
                      WRITE_PSRAM0_COLOR_KEY();
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(OSD1_66, BIT0,BIT0);
                      else
                          msWriteByteMask(OSD1_66, 0,BIT0);
                      colorPtr++;
                  }
              
              
              #elif CHIP_ID==CHIP_TSUMV
              
                  WORD xdata i,u16PSRAM_AddrPort;
                  BYTE u8Bank=msReadByte(OSD1_00);
                  msWriteByte(OSD1_00,0x00);//subbank 0
                  if (u8Group==0)
                      u16PSRAM_AddrPort=OSD1_76;
                  else
                      u16PSRAM_AddrPort=OSD1_86;
              //u8Addr=0;
                  //write R/G/B
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  for (i=0;i<u16Num;i++)
                  {   
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Blue));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Green));
                      msWriteByte(u16PSRAM_AddrPort+2, ((colorPtr+i)->u8Red));
                  }
              
                  //write colorkey
                  msWriteByte(u16PSRAM_AddrPort, u8Addr);
                  while (u16Num--)
                  {
                      if(colorPtr->u8ColorKey)
                          msWriteByteMask(u16PSRAM_AddrPort+3, BIT0,BIT0);
                      else
                          msWriteByteMask(u16PSRAM_AddrPort+3, 0,BIT0);
                      colorPtr++;
                  }
                  msWriteByte(OSD1_00,u8Bank);//subbank 0
              
                  #else
                      WORD xdata i;
                      u8Group=0;
                      msWriteByte( OSD2_AC, u8Addr );
C51 COMPILER V9.01   COMMONLOADCPNCOMPRESSFONT                                             03/09/2023 15:39:00 PAGE 4   

                      for (i=0; i<u16Num; i++)
                      {
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Red));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Green));
                              msWriteByte(OSD2_AD, ((colorPtr+i)->u8Blue));
                      }
                  #endif
              }
              
              
              #endif
 187          
 188          
 189          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
