
#ifndef _MSAUTOGAMMA_SETTING_H
#define _MSAUTOGAMMA_SETTING_H


#ifdef _MSAUTOGAMMA_SETTING_C
#define INTERFACE
#else
#define INTERFACE   extern
#endif

#define sRGB_MODE 0
#define AdobeRGB_MODE 1

code BYTE tFGamma[] =
{
	#if ENABLE_USE_NewDeltaE
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x02, 0x03, 0x00,
	0x04, 0x05, 0x00, 0x06, 0x07, 0x00,
	0x09, 0x0a, 0x00, 0x0c, 0x0e, 0x00,
	0x10, 0x12, 0x00, 0x14, 0x16, 0x00,
	0x19, 0x1b, 0x00, 0x1e, 0x21, 0x00,
	0x24, 0x27, 0x00, 0x2a, 0x2d, 0x00,
	0x31, 0x34, 0x00, 0x38, 0x3c, 0x00,
	0x40, 0x44, 0x00, 0x48, 0x4d, 0x00,
	0x51, 0x56, 0x00, 0x5a, 0x5f, 0x00,
	0x64, 0x69, 0x00, 0x6f, 0x74, 0x00,
	0x79, 0x7f, 0x00, 0x85, 0x8b, 0x00,
	0x91, 0x97, 0x00, 0x9d, 0xa3, 0x00,
	0xaa, 0xb0, 0x00, 0xb7, 0xbe, 0x00,
	0xc5, 0xcc, 0x00, 0xd3, 0xdb, 0x00,
	0xe2, 0xea, 0x00, 0xf2, 0xf9, 0x00,
	0x01, 0x0a, 0x11, 0x12, 0x1a, 0x11,
	0x23, 0x2b, 0x11, 0x34, 0x3d, 0x11,
	0x46, 0x4f, 0x11, 0x58, 0x62, 0x11,
	0x6b, 0x75, 0x11, 0x7f, 0x89, 0x11,
	0x93, 0x9d, 0x11, 0xa7, 0xb1, 0x11,
	0xbc, 0xc7, 0x11, 0xd1, 0xdc, 0x11,
	0xe7, 0xf2, 0x11, 0xfe, 0x09, 0x21,
	0x15, 0x20, 0x22, 0x2c, 0x38, 0x22,
	0x44, 0x50, 0x22, 0x5c, 0x69, 0x22,
	0x75, 0x82, 0x22, 0x8f, 0x9c, 0x22,
	0xa9, 0xb6, 0x22, 0xc3, 0xd1, 0x22,
	0xde, 0xec, 0x22, 0xfa, 0x07, 0x32,
	0x15, 0x24, 0x33, 0x32, 0x40, 0x33,
	0x4f, 0x5e, 0x33, 0x6c, 0x7b, 0x33,
	0x8a, 0x9a, 0x33, 0xa9, 0xb8, 0x33,
	0xc8, 0xd7, 0x33, 0xe7, 0xf7, 0x33,
	0x07, 0x17, 0x44, 0x28, 0x38, 0x44,
	0x49, 0x59, 0x44, 0x6a, 0x7b, 0x44,
	0x8c, 0x9d, 0x44, 0xaf, 0xc0, 0x44,
	0xd2, 0xe4, 0x44, 0xf5, 0x07, 0x54,
	0x19, 0x2c, 0x55, 0x3e, 0x50, 0x55,
	0x63, 0x76, 0x55, 0x88, 0x9b, 0x55,
	0xae, 0xc2, 0x55, 0xd5, 0xe8, 0x55,
	0xfc, 0x10, 0x65, 0x24, 0x38, 0x66,
	0x4c, 0x60, 0x66, 0x74, 0x89, 0x66,
	0x9d, 0xb2, 0x66, 0xc7, 0xdc, 0x66,
	0xf1, 0x06, 0x76, 0x1c, 0x31, 0x77,
	0x47, 0x5c, 0x77, 0x72, 0x88, 0x77,
	0x9e, 0xb4, 0x77, 0xcb, 0xe1, 0x77,
	0xf8, 0x0f, 0x87, 0x26, 0x3c, 0x88,
	0x54, 0x6b, 0x88, 0x82, 0x9a, 0x88,
	0xb1, 0xc9, 0x88, 0xe1, 0xf9, 0x88,
	0x11, 0x29, 0x99, 0x42, 0x5a, 0x99,
	0x73, 0x8c, 0x99, 0xa4, 0xbd, 0x99,
	0xd7, 0xf0, 0x99, 0x09, 0x23, 0xaa,
	0x3c, 0x56, 0xaa, 0x70, 0x8a, 0xaa,
	0xa4, 0xbe, 0xaa, 0xd9, 0xf3, 0xaa,
	0x0e, 0x29, 0xbb, 0x44, 0x5f, 0xbb,
	0x7a, 0x95, 0xbb, 0xb0, 0xcc, 0xbb,
	0xe8, 0x03, 0xcb, 0x1f, 0x3b, 0xcc,
	0x57, 0x74, 0xcc, 0x90, 0xad, 0xcc,
	0xc9, 0xe6, 0xcc, 0x03, 0x20, 0xdd,
	0x3d, 0x5a, 0xdd, 0x78, 0x95, 0xdd,
	0xb3, 0xd1, 0xdd, 0xef, 0x0d, 0xed,
	0x2b, 0x49, 0xee, 0x68, 0x86, 0xee,
	0xa5, 0xc4, 0xee, 0xe3, 0x02, 0xfe,
	0x21, 0x40, 0xff, 0x5f, 0x7f, 0xff,
	0x9f, 0xbf, 0xff, 0xde, 0xff, 0xff,
	#else
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x01, 0x01, 0x00, 0x02, 0x03, 0x00,
	0x04, 0x05, 0x00, 0x06, 0x07, 0x00,
	0x09, 0x0a, 0x00, 0x0c, 0x0e, 0x00,
	0x10, 0x12, 0x00, 0x14, 0x16, 0x00,
	0x19, 0x1b, 0x00, 0x1e, 0x21, 0x00,
	0x24, 0x27, 0x00, 0x2a, 0x2d, 0x00,
	0x31, 0x34, 0x00, 0x38, 0x3c, 0x00,
	0x40, 0x44, 0x00, 0x48, 0x4d, 0x00,
	0x51, 0x56, 0x00, 0x5a, 0x5f, 0x00,
	0x64, 0x69, 0x00, 0x6f, 0x74, 0x00,
	0x79, 0x7f, 0x00, 0x85, 0x8b, 0x00,
	0x91, 0x97, 0x00, 0x9d, 0xa3, 0x00,
	0xaa, 0xb0, 0x00, 0xb7, 0xbe, 0x00,
	0xc5, 0xcc, 0x00, 0xd3, 0xdb, 0x00,
	0xe2, 0xea, 0x00, 0xf2, 0xf9, 0x00,
	0x01, 0x0a, 0x11, 0x12, 0x1a, 0x11,
	0x23, 0x2b, 0x11, 0x34, 0x3d, 0x11,
	0x46, 0x4f, 0x11, 0x58, 0x62, 0x11,
	0x6b, 0x75, 0x11, 0x7f, 0x89, 0x11,
	0x93, 0x9d, 0x11, 0xa7, 0xb1, 0x11,
	0xbc, 0xc7, 0x11, 0xd1, 0xdc, 0x11,
	0xe7, 0xf2, 0x11, 0xfe, 0x09, 0x21,
	0x15, 0x20, 0x22, 0x2c, 0x38, 0x22,
	0x44, 0x50, 0x22, 0x5c, 0x69, 0x22,
	0x75, 0x82, 0x22, 0x8f, 0x9c, 0x22,
	0xa9, 0xb6, 0x22, 0xc3, 0xd1, 0x22,
	0xde, 0xec, 0x22, 0xfa, 0x07, 0x32,
	0x15, 0x24, 0x33, 0x32, 0x40, 0x33,
	0x4f, 0x5e, 0x33, 0x6c, 0x7b, 0x33,
	0x8a, 0x9a, 0x33, 0xa9, 0xb8, 0x33,
	0xc8, 0xd7, 0x33, 0xe7, 0xf7, 0x33,
	0x07, 0x17, 0x44, 0x28, 0x38, 0x44,
	0x49, 0x59, 0x44, 0x6a, 0x7b, 0x44,
	0x8c, 0x9d, 0x44, 0xaf, 0xc0, 0x44,
	0xd2, 0xe4, 0x44, 0xf5, 0x07, 0x54,
	0x19, 0x2c, 0x55, 0x3e, 0x50, 0x55,
	0x63, 0x76, 0x55, 0x88, 0x9b, 0x55,
	0xae, 0xc2, 0x55, 0xd5, 0xe8, 0x55,
	0xfc, 0x10, 0x65, 0x24, 0x38, 0x66,
	0x4c, 0x60, 0x66, 0x74, 0x89, 0x66,
	0x9d, 0xb2, 0x66, 0xc7, 0xdc, 0x66,
	0xf1, 0x06, 0x76, 0x1c, 0x31, 0x77,
	0x47, 0x5c, 0x77, 0x72, 0x88, 0x77,
	0x9e, 0xb4, 0x77, 0xcb, 0xe1, 0x77,
	0xf8, 0x0f, 0x87, 0x26, 0x3c, 0x88,
	0x54, 0x6b, 0x88, 0x82, 0x9a, 0x88,
	0xb1, 0xc9, 0x88, 0xe1, 0xf9, 0x88,
	0x11, 0x29, 0x99, 0x42, 0x5a, 0x99,
	0x73, 0x8c, 0x99, 0xa4, 0xbd, 0x99,
	0xd7, 0xf0, 0x99, 0x09, 0x23, 0xaa,
	0x3c, 0x56, 0xaa, 0x70, 0x8a, 0xaa,
	0xa4, 0xbe, 0xaa, 0xd9, 0xf3, 0xaa,
	0x0e, 0x29, 0xbb, 0x44, 0x5f, 0xbb,
	0x7a, 0x95, 0xbb, 0xb0, 0xcc, 0xbb,
	0xe8, 0x03, 0xcb, 0x1f, 0x3b, 0xcc,
	0x57, 0x74, 0xcc, 0x90, 0xad, 0xcc,
	0xc9, 0xe6, 0xcc, 0x03, 0x20, 0xdd,
	0x3d, 0x5a, 0xdd, 0x78, 0x95, 0xdd,
	0xb3, 0xd1, 0xdd, 0xef, 0x0d, 0xed,
	0x2b, 0x49, 0xee, 0x68, 0x86, 0xee,
	0xa5, 0xc4, 0xee, 0xe3, 0x02, 0xfe,
	0x21, 0x40, 0xff, 0x5f, 0x7f, 0xff,
	0x9f, 0xbf, 0xff, 0xde, 0xff, 0xff,
	#endif
};

code BYTE tAllFixGammaTab[] =
{
	#if ENABLE_USE_NewDeltaE
	0x00, 0x40, 0x00, 0x5a, 0x6e, 0x00,
	0x80, 0x8f, 0x00, 0x9c, 0xa9, 0x00,
	0xb5, 0xc0, 0x00, 0xca, 0xd4, 0x00,
	0xdd, 0xe6, 0x00, 0xef, 0xf8, 0x00,
	0x00, 0x08, 0x11, 0x0f, 0x17, 0x11,
	0x1e, 0x25, 0x11, 0x2c, 0x33, 0x11,
	0x39, 0x40, 0x11, 0x46, 0x4c, 0x11,
	0x52, 0x58, 0x11, 0x5e, 0x64, 0x11,
	0x6a, 0x70, 0x11, 0x75, 0x7b, 0x11,
	0x80, 0x85, 0x11, 0x8a, 0x90, 0x11,
	0x95, 0x9a, 0x11, 0x9f, 0xa4, 0x11,
	0xa8, 0xad, 0x11, 0xb2, 0xb7, 0x11,
	0xbb, 0xc0, 0x11, 0xc4, 0xc9, 0x11,
	0xcd, 0xd2, 0x11, 0xd6, 0xdb, 0x11,
	0xdf, 0xe3, 0x11, 0xe7, 0xec, 0x11,
	0xf0, 0xf4, 0x11, 0xf8, 0xfc, 0x11,
	0x00, 0x04, 0x22, 0x08, 0x0c, 0x22,
	0x10, 0x14, 0x22, 0x17, 0x1b, 0x22,
	0x1f, 0x23, 0x22, 0x27, 0x2a, 0x22,
	0x2e, 0x32, 0x22, 0x35, 0x39, 0x22,
	0x3c, 0x40, 0x22, 0x44, 0x47, 0x22,
	0x4b, 0x4e, 0x22, 0x52, 0x55, 0x22,
	0x58, 0x5c, 0x22, 0x5f, 0x63, 0x22,
	0x66, 0x69, 0x22, 0x6d, 0x70, 0x22,
	0x73, 0x76, 0x22, 0x7a, 0x7d, 0x22,
	0x80, 0x83, 0x22, 0x87, 0x8a, 0x22,
	0x8d, 0x90, 0x22, 0x93, 0x96, 0x22,
	0x99, 0x9c, 0x22, 0x9f, 0xa2, 0x22,
	0xa5, 0xa8, 0x22, 0xac, 0xae, 0x22,
	0xb1, 0xb4, 0x22, 0xb7, 0xba, 0x22,
	0xbd, 0xc0, 0x22, 0xc3, 0xc6, 0x22,
	0xc9, 0xcc, 0x22, 0xcf, 0xd1, 0x22,
	0xd4, 0xd7, 0x22, 0xda, 0xdd, 0x22,
	0xe0, 0xe2, 0x22, 0xe5, 0xe8, 0x22,
	0xeb, 0xed, 0x22, 0xf0, 0xf3, 0x22,
	0xf6, 0xf8, 0x22, 0xfb, 0xfe, 0x22,
	0x00, 0x03, 0x33, 0x06, 0x08, 0x33,
	0x0b, 0x0d, 0x33, 0x10, 0x13, 0x33,
	0x15, 0x18, 0x33, 0x1a, 0x1d, 0x33,
	0x20, 0x22, 0x33, 0x25, 0x27, 0x33,
	0x2a, 0x2c, 0x33, 0x2f, 0x31, 0x33,
	0x34, 0x36, 0x33, 0x39, 0x3b, 0x33,
	0x3e, 0x40, 0x33, 0x43, 0x45, 0x33,
	0x48, 0x4a, 0x33, 0x4d, 0x4f, 0x33,
	0x51, 0x54, 0x33, 0x56, 0x59, 0x33,
	0x5b, 0x5d, 0x33, 0x60, 0x62, 0x33,
	0x64, 0x67, 0x33, 0x69, 0x6c, 0x33,
	0x6e, 0x70, 0x33, 0x73, 0x75, 0x33,
	0x77, 0x79, 0x33, 0x7c, 0x7e, 0x33,
	0x80, 0x83, 0x33, 0x85, 0x87, 0x33,
	0x89, 0x8c, 0x33, 0x8e, 0x90, 0x33,
	0x92, 0x95, 0x33, 0x97, 0x99, 0x33,
	0x9b, 0x9e, 0x33, 0xa0, 0xa2, 0x33,
	0xa4, 0xa6, 0x33, 0xa9, 0xab, 0x33,
	0xad, 0xaf, 0x33, 0xb1, 0xb4, 0x33,
	0xb6, 0xb8, 0x33, 0xba, 0xbc, 0x33,
	0xbe, 0xc0, 0x33, 0xc3, 0xc5, 0x33,
	0xc7, 0xc9, 0x33, 0xcb, 0xcd, 0x33,
	0xcf, 0xd1, 0x33, 0xd3, 0xd6, 0x33,
	0xd8, 0xda, 0x33, 0xdc, 0xde, 0x33,
	0xe0, 0xe2, 0x33, 0xe4, 0xe6, 0x33,
	0xe8, 0xea, 0x33, 0xec, 0xee, 0x33,
	0xf0, 0xf2, 0x33, 0xf4, 0xf6, 0x33,
	0xf8, 0xfa, 0x33, 0xfc, 0xff, 0x33,
	#else
	0x00, 0x80, 0x00, 0xb5, 0xde, 0x00,
	0x00, 0x1e, 0x11, 0x39, 0x53, 0x11,
	0x6a, 0x80, 0x11, 0x95, 0xa9, 0x11,
	0xbc, 0xce, 0x11, 0xdf, 0xf0, 0x11,
	0x00, 0x10, 0x22, 0x1f, 0x2e, 0x22,
	0x3d, 0x4b, 0x22, 0x59, 0x66, 0x22,
	0x73, 0x80, 0x22, 0x8d, 0x9a, 0x22,
	0xa6, 0xb2, 0x22, 0xbe, 0xc9, 0x22,
	0xd5, 0xe0, 0x22, 0xeb, 0xf6, 0x22,
	0x01, 0x0b, 0x33, 0x16, 0x20, 0x33,
	0x2a, 0x34, 0x33, 0x3e, 0x48, 0x33,
	0x52, 0x5b, 0x33, 0x65, 0x6e, 0x33,
	0x78, 0x81, 0x33, 0x8a, 0x93, 0x33,
	0x9c, 0xa5, 0x33, 0xad, 0xb6, 0x33,
	0xbf, 0xc7, 0x33, 0xd0, 0xd8, 0x33,
	0xe0, 0xe9, 0x33, 0xf1, 0xf9, 0x33,
	0x01, 0x09, 0x44, 0x11, 0x19, 0x44,
	0x21, 0x28, 0x44, 0x30, 0x38, 0x44,
	0x3f, 0x47, 0x44, 0x4e, 0x56, 0x44,
	0x5d, 0x64, 0x44, 0x6c, 0x73, 0x44,
	0x7a, 0x81, 0x44, 0x88, 0x8f, 0x44,
	0x96, 0x9d, 0x44, 0xa4, 0xab, 0x44,
	0xb2, 0xb9, 0x44, 0xc0, 0xc6, 0x44,
	0xcd, 0xd4, 0x44, 0xda, 0xe1, 0x44,
	0xe7, 0xee, 0x44, 0xf4, 0xfb, 0x44,
	0x01, 0x08, 0x55, 0x0e, 0x14, 0x55,
	0x1b, 0x21, 0x55, 0x27, 0x2d, 0x55,
	0x34, 0x3a, 0x55, 0x40, 0x46, 0x55,
	0x4c, 0x52, 0x55, 0x58, 0x5e, 0x55,
	0x64, 0x6a, 0x55, 0x70, 0x76, 0x55,
	0x7c, 0x82, 0x55, 0x87, 0x8d, 0x55,
	0x93, 0x99, 0x55, 0x9e, 0xa4, 0x55,
	0xaa, 0xaf, 0x55, 0xb5, 0xbb, 0x55,
	0xc0, 0xc6, 0x55, 0xcb, 0xd1, 0x55,
	0xd6, 0xdc, 0x55, 0xe1, 0xe7, 0x55,
	0xec, 0xf2, 0x55, 0xf7, 0xfc, 0x55,
	0x02, 0x07, 0x66, 0x0c, 0x12, 0x66,
	0x17, 0x1c, 0x66, 0x21, 0x27, 0x66,
	0x2c, 0x31, 0x66, 0x36, 0x3b, 0x66,
	0x41, 0x46, 0x66, 0x4b, 0x50, 0x66,
	0x55, 0x5a, 0x66, 0x5f, 0x64, 0x66,
	0x69, 0x6e, 0x66, 0x73, 0x78, 0x66,
	0x7d, 0x82, 0x66, 0x87, 0x8c, 0x66,
	0x91, 0x96, 0x66, 0x9a, 0x9f, 0x66,
	0xa4, 0xa9, 0x66, 0xae, 0xb3, 0x66,
	0xb7, 0xbc, 0x66, 0xc1, 0xc6, 0x66,
	0xca, 0xcf, 0x66, 0xd4, 0xd8, 0x66,
	0xdd, 0xe2, 0x66, 0xe6, 0xeb, 0x66,
	0xf0, 0xf4, 0x66, 0xf9, 0xfe, 0x66,
	0x02, 0x07, 0x77, 0x0b, 0x10, 0x77,
	0x14, 0x19, 0x77, 0x1d, 0x22, 0x77,
	0x26, 0x2b, 0x77, 0x2f, 0x34, 0x77,
	0x38, 0x3d, 0x77, 0x41, 0x46, 0x77,
	0x4a, 0x4e, 0x77, 0x53, 0x57, 0x77,
	0x5b, 0x60, 0x77, 0x64, 0x69, 0x77,
	0x6d, 0x71, 0x77, 0x75, 0x7a, 0x77,
	0x7e, 0x82, 0x77, 0x87, 0x8b, 0x77,
	0x8f, 0x93, 0x77, 0x98, 0x9c, 0x77,
	0xa0, 0xa4, 0x77, 0xa8, 0xad, 0x77,
	0xb1, 0xb5, 0x77, 0xb9, 0xbd, 0x77,
	0xc1, 0xc6, 0x77, 0xca, 0xce, 0x77,
	0xd2, 0xd6, 0x77, 0xda, 0xde, 0x77,
	0xe2, 0xe6, 0x77, 0xea, 0xee, 0x77,
	0xf2, 0xf6, 0x77, 0xfa, 0xff, 0x77,
	#endif
};

code BYTE* tAllFrontEndGammaTab[] =
{
	tFGamma,
};


code BYTE* tAllxvYccFixGammaTab[] =
{
	tAllFixGammaTab,
};

INTERFACE  code BYTE* tAllFrontEndGammaTab[];
INTERFACE code BYTE* tAllxvYccFixGammaTab[];
INTERFACE code BYTE* tAllFGamma3x3Matrix[2];

/////////////////////////////////////////////////////////////////////
// void msWriteFGammaCM(BYTE bWindow,  BYTE ucGammaTableIdx)
//
// Example : msWriteFGammaCM( MainWindow ,  tColorSpaceMatrix)
/////////////////////////////////////////////////////////////////////


//INTERFACE void NVRam_ReadByte_AutoGma(WORD u16Addr, BYTE *pu16Value);
//INTERFACE void msCalCheckSum(BYTE chkMode);//Hans120316
//#define sRGB_MODE 0
//#define AdobeRGB_MODE 1
#undef INTERFACE
#endif
