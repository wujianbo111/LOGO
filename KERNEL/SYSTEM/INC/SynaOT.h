// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// This file is specifically generated for
//   Customer: BenQ
//   Project: Platium
//   Date: 09-Feb, 2007

// OTLib 3.2 is customized with the following options:
// * Interrupt Mode of operation (Attention Line)
// * Hardware I2C on the host processor
// * Button  Features on OneTouch
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Copyright (c) 2006-2007 Synaptics, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// This is a OneTouch configuration file used by the OTLib Library.

// ******************************************
// ******************************************
// ==> WARNING: ** DO NOT EDIT This file <==
// ******************************************
// ******************************************

#ifndef	_SYNAOT_H
#define	_SYNAOT_H

//#include "UserOT.h"
//#include "Dell_OTConfig.h"

// Error_codes
#define		OT_SUCCESS				0x00
#define		OT_FAILURE				0x01

// True/ False Codes
#define OT_TRUE		1
#define	OT_FALSE	0

#define TurnOff      0
#define TurnOn      1


// OneTouch Register Definitions

#define 	OT_CONFIG_REG_START_ADDR		0x0000


#define		OT_DATA_REG_START_ADDR			0x0109
#define		OT_NUM_DATA_REG_BYTES			4		// (0x109 - 0x10A)*2

#define		OT_DATA_REG_START_ADDR_HIGH		0x01
#define		OT_DATA_REG_START_ADDR_LOW		0x09

#define		OT_BUTTON_OFFSET				0

// Define a prototype to check for Attention Line Assertion with TimeOut
extern BYTE OT_Poll_Attn_Line_TimeOut(void);		// customer implements this function


// Hardware I2C

// **********************************************
// THE CUSTOMER HAS TO IMPLEMENT THESE FUNCTIONS
// **********************************************

// ===================================
// * I2C Hardware Specific functions *
// ===================================

// Function Prototypes

// HAL function prototypes that OTLib needs - customer needs to implement them
extern BYTE		OT_HAL_BitRead_ATTN(void);
extern BYTE		OT_WriteI2C(BYTE	bI2CAddr, BYTE	*pBuffer, BYTE	bBytesToSend);
extern BYTE  	OT_ReadI2C(BYTE I2CAddr7Bit, BYTE *Buffer, BYTE BytesToRead);


// API Function Prototypes in OTLib
//extern BYTE		OT_ReadDataReg(BYTE *pBuffer);
extern BYTE		OT_Init(void);

extern BYTE OT_Set_ReadAddress(BYTE addr);


#if Scan_Source == Cypress
extern code BYTE InitialAddress1[4];
extern code BYTE InitialAddress2[2];
extern code BYTE InitialAddress3[4];
extern code BYTE SetupMode[125];
#endif

#endif
